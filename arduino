KLASA SERIAL
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
}

Citanje jednog karaktera sa ulaza
char karakter;

void loop() {
  // put your main code here, to run repeatedly:
  while(!Serial.available());
  delay(20);
  karakter = Serial.read();

  Serial.print("Primljen karakter: ");
  Serial.println(karakter);

  delay(500);
}

Citanje celog stringa sa ulaza
char string[64];
int duzina;

void loop() {
  // put your main code here, to run repeatedly:
  while(!Serial.available());
  delay(20);
  duzina = Serial.available();
  Serial.readBytes(string, duzina);
  string[duzina] = 0;

  Serial.print("Primljen string: ");
  Serial.println(string);

  delay(500);
}

konverzija stringa u broj: broj = atoi(string);




char karakteri[62] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'y', 'v', 'w', 'x', 'y', 'z'};


LCD
#include <LiquidCrystal.h>
LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

int kon = 0;

String ocitajTaster(){
  String x;
  int ulaz = analogRead(0);
  if(ulaz < 75) x = "RIGHT";
  else if(ulaz < 200) x = "UP";
  else if(ulaz < 400) x = "DOWN";
  else if(ulaz < 600) x = "LEFT";
  else if(ulaz < 1000) x = "SELECT";
  else x = "NISTA";
  return x;
}

void setup() {
  // put your setup code here, to run once:
  lcd.begin(16, 2);
}

void loop() {
  // put your main code here, to run repeatedly:
  if(ocitajTaster() == "SELECT" && kon == 0) { 
    lcd.clear(); 
    lcd.print("Pritisnut SEL"); 
    kon = 1;
  }else if(ocitajTaster() == "RIGHT" && kon == 0) { 
    lcd.clear(); 
    lcd.print("Pritisnut RIGHT");
    kon = 1;
 }else if(ocitajTaster() == "LEFT" && kon == 0) { 
    lcd.clear(); 
    lcd.print("Pritisnut LEFT"); 
    kon = 1;
  }else if(ocitajTaster() == "UP" && kon == 0) { 
    lcd.clear(); 
    lcd.print("Pritisnut UP"); 
    kon = 1;
  }else if(ocitajTaster() == "DOWN" && kon == 0) { 
    lcd.clear(); 
    lcd.print("Pritisnut DOWN"); 
    kon = 1;
  }else if(ocitajTaster() == "NISTA") {
    lcd.clear();
    kon = 0;
  }
}

PLS7
Upravljanje led diodama
#include <avr/io.h> 
#include <util/delay.h> 

int main(void)
{
  DDRD = 0xff; //port D -> izlaz 
  DDRB |= 1 << 4; //PB4 -> izlaz 
  PORTB &= ~(1 << 4); //PB4 = 0, cime se ukljucuje tranzistor Q0 

  while(1)
  {
    PORTD = 0xaa; //ukljucuju se LED na pozicijama 6, 4, 2 i 0 
    _delay_ms(1000);//pauza 1s 
    PORTD = 0x55; //ukljucuju se LED na pozicijama 7, 5, 3 i 1 
    _delay_ms(1000);//pauza 1s 
  }
  return 0;
}

Upravljanje 4x7seg displey-om
#include <avr/io.h> 
#include <util/delay.h> 

const unsigned char simboli[] = {
0x5, 0xdd, 0x46, 0x54, 0x9c, 0x34, 0x24, 0x5d, 0x4, 0x14, 
//  0    1     2     3     4     5     6     7     8    9     
 0x14, 0xc, 0xa4, 0x27, 0xc4, 0x26, 0x2e, 0x25, 0x8c, 0xaf, 0xd5, 
//     A    b     C     d     E     F     G     H     I     J       
}; 

int main(void)
{
  unsigned char displej;
  DDRD = 0xff; //port D -> izlaz 
  DDRB = 0x0f; //PB3 - PB0 -> izlazi 
  while(1)
  {
    for (displej = 1; displej <= 4; displej++)
    {
      PORTB = ~(0x01 << (4-displej)); //ukljucuje se tranzistor na odgovarajucoj poziciji 
      PORTD = simboli[displej-1]; //ispis simbola iz tabele 
      _delay_ms(2); //pauza 2ms 
    }
  }
  return 0;
}


